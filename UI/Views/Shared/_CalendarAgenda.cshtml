@model UI.Models.p31view.calendarViewModel
@inject BL.Factory _f

@{

    string strClass = null;
    string strHodiny = null;
    bool bolWeekendDay = false;
    bool bolHoliday = false;
    bool bolOK = false;
    string strStyle = null;

    int x_ok = 0;
    string strTitleVykazatDo = _f.tra("Vykázat do");
    string strTitleSouceHodiny = _f.tra("Součet hodin");
    string strCisloDne = null;
    string strDatum = null;
    int intLastM = 0;


    var qryP31 = Model.lisP31;

    double _dblHodiny = qryP31.Sum(p => p.p31Hours_Orig);
    DateTime d = Model.d1;
    if (Model.IsAgendaDescending) d = Model.d2;
}




<table border="0" id="mt_scheduler_agenda">
    <tr style="line-height:20px;">
        <th style="color:navy;width:55px;">
            @(Model.m0)/@(Model.y0)
        </th>
        <th style="width:70px;text-align:right;padding-right:28px;">

            <a class="stat_link" style="font-weight:bold;" onclick="zoom_allmonth(this)">
                @(BO.basTime.FormatNumeric(_dblHodiny,Model.ShowHHMM))
            </a>
        </th>
        <th style="text-align:left;font-weight:normal;">
            <span class="badge bg-info">
                @(BO.BAS.ObjectDate2String(Model.d1)+" - "+ BO.BAS.ObjectDate2String(Model.d2))
            </span>
            @if (Model.CurrentView == UI.Models.p31view.CalendarViewEnum.NAgenda)
            {
                <label for="AgendaNdays" style="margin-left:30px;">@_f.tra("Počet zobrazovaných dní"):</label>
                <select asp-for="@Model.AgendaNdays" onchange="change_agenda_ndays(this)">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="10">10</option>
                    <option value="14">14</option>
                    <option value="20">20</option>
                </select>
            }


            <select asp-for="@Model.IsAgendaDescending" onchange="change_agenda_descending(this)" style="margin-left:30px;">
                <option value="false">@_f.tra("Vzestupně")</option>
                <option value="true">@_f.tra("Sestupně")</option>
            </select>
        </th>
        
    </tr>



    @for (int x=1;x<50;x++)
    {
        strClass = "mt_scheduler-day-in-month"; bolWeekendDay = false; bolHoliday = false;


        if (d.DayOfWeek == DayOfWeek.Saturday || d.DayOfWeek == DayOfWeek.Sunday)
        {
            bolWeekendDay = true;
            strClass = "mt_scheduler-day-weekend";
            //if (d.Month == Model.m0 && d.Year == Model.y0)
            //{
            //    strClass = "mt_scheduler-day-weekend";
            //}

        }
        if (Model.lisC26.Any(p => p.c26Date == d))
        {
            bolHoliday = true;
            strClass = "mt_scheduler-day-holiday";
        }
        if (d == DateTime.Today)
        {
            strClass = "mt_scheduler-today";
        }
        bolOK = true;
        if (bolWeekendDay && !Model.ShowWeekend)
        {
            bolOK = false;
            if (Model.CurrentView == UI.Models.p31view.CalendarViewEnum.NAgenda) bolOK = true;  //Nagenda víkendy zobrazuje vždy!
        }
        //if (bolWeekendDay && Model.CurrentView == UI.Models.p31view.CalendarViewEnum.NAgenda && x <= 2)
        //{
        //    bolOK = false;
        //}

        if (bolOK)
        {
            if (x > 1)
            {
                if (d.Month != intLastM)
                {
                    @Html.Raw("<tr class='agenda_row_divider_month'><td></td><td></td><td></td></tr>");
                }
                if (d.DayOfWeek == DayOfWeek.Monday)
                {
                    @Html.Raw("<tr class='agenda_row_divider_week'><td></td><td></td><td></td></tr>");
                }
            }
            if (x_ok % 2 == 0)
            {
                @Html.Raw("<tr class='agenda_row_suda'>");
            }
            else
            {
                @Html.Raw("<tr class='agenda_row_licha'>");
            }

            strDatum = BO.BAS.ObjectDate2String(d, "dd.MM.yyyy");
            strCisloDne = BO.BAS.ObjectDate2String(d, "dd");
            if (d == DateTime.Today)
            {
                strCisloDne += "<span class='k-icon k-i-star' style='color:orange;'></span>";
            }
            if (bolHoliday) strCisloDne += "🍷";
            strCisloDne += "<br>" + BO.BAS.ObjectDate2String(d, "dddd");

            if (intLastM != d.Month || d.DayOfWeek == DayOfWeek.Monday)
            {
                strCisloDne += $"<br><small>{BO.BAS.ObjectDate2String(d, "MMMM")}</small>";
            }
            if (bolHoliday)
            {
                strCisloDne += "<br><small>" + BO.BAS.OM2(Model.lisC26.First(p => p.c26Date == d).c26Name, 15) + "</small>";
            }
            @Html.Raw($"<td class='{strClass}' style='border-right:solid 1px #DCDCDC;'>");
            @Html.Raw($"<div class='mt_scheduler-day-link-container' onclick='p31c(\"{strDatum}\")' title='{strTitleVykazatDo}: {strDatum}'>");
            @Html.Raw($"<a>{strCisloDne}</a>");
            @Html.Raw("</div>");
            @Html.Raw("</td>");

            var qry = Model.lisSums.Where(p => p.p31Date == d);
            @Html.Raw($"<td class='{strClass}' style='text-align:right;padding-right:30px;'>");
            if (qry.Count() > 0)
            {
                strStyle = "color:blue;";
                if (qry.First().Hours_Billable > 0 && qry.First().Hours_NonBillable == 0)
                {
                    strStyle = "color:green;";
                }
                else
                {
                    if (qry.First().Hours_NonBillable > 0)
                    {
                        strStyle = "color:red;";
                    }
                }
                strStyle += ";margin-left:3px;";
                strHodiny = BO.basTime.FormatNumeric(qry.First().Hours, Model.ShowHHMM);

                @Html.Raw($"<a title='{strTitleSouceHodiny}' onclick='re(this,{Model.j02ID},\"{strDatum}\")'  class='mt_scheduler_valuelink' style='{strStyle}' p31date='{strDatum}' j02id='{Model.j02ID}'>{strHodiny}</a>");

            }

            @Html.Raw("</td>");

            strClass += " dc";
            @Html.Raw($"<td class='{strClass}'>");


            if (Model.ShowP31Recs)
            {
                if (Model.ShowP31RecsNoTime)
                {
                    qryP31 = Model.lisP31.Where(p => p.p31Date == d);
                }
                else
                {
                    qryP31 = Model.lisP31.Where(p => p.p31Date == d && p.p33ID == BO.p33IdENUM.Cas);    //v rozpisu zobrazovat pouze časové úkony
                }

                foreach (var recP31 in qryP31)
                {
                    strClass = "p31_rec_link_agenda";
                    @Html.Raw("<div>");

                    switch (recP31.p33ID)
                    {
                        case BO.p33IdENUM.Kusovnik:
                            strHodiny = recP31.p31Value_Orig.ToString();
                            strClass += " kusovnik";
                            break;
                        case BO.p33IdENUM.Cas:
                            if (recP31.p33ID == BO.p33IdENUM.Cas)
                            {
                                if (Model.ShowHHMM)
                                {
                                    strHodiny = recP31.p31HHMM_Orig;
                                }
                                else
                                {
                                    strHodiny = BO.BAS.Num2StringNull(recP31.p31Hours_Orig);
                                }
                            }
                            break;

                        default:
                            strHodiny = recP31.j27Code_Billing_Orig;
                            if (recP31.p34IncomeStatementFlag == BO.p34IncomeStatementFlagENUM.Prijem)
                            {
                                strClass += " vydaj";
                            }
                            else
                            {
                                strClass += " odmena";
                            }
                            break;
                    }

                    @Html.Raw($"<a class='{strClass}' onclick='p31_rec({recP31.pid})'>");

                    strHodiny = "<span class='bunka_hodiny'>" + strHodiny + "</span>";

                    @Html.Raw(strHodiny + TheGridRowSymbol.p31_symbol(recP31));
                    @Html.Raw(BO.BAS.OM2(recP31.p41Name, 15))
                    if (recP31.p28ID_Client > 0)
                    {
                        @Html.Raw(" (" + BO.BAS.OM2(recP31.ClientName, 15) + ")")
                    }
                    @Html.Raw("</a>");

                    @Html.Raw($"<span class='mt_scheduler-p31text'>{BO.BAS.OM2(recP31.p31Text, 100)}</span>");

                    @Html.Raw("</div>");
                }
            }



            @Html.Raw("</td>");



            @Html.Raw("</tr>");

            x_ok += 1;

        }

        intLastM = d.Month;

        if (Model.IsAgendaDescending)
        {
            d = d.AddDays(-1);
        }
        else
        {
            d = d.AddDays(1);
        }
        if (d < Model.d1 || d > Model.d2)
        {
            break;
        }



    }
</table>
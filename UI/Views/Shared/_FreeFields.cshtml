@model FreeFieldsViewModel

@{
    if (Model == null || Model.inputs==null)
    {
        return;
    }
    string _labelclassname = "col-sm-2 col-md-3 col-form-label recpagelabel";
    if (Model.caller == "p31record")
    {
        _labelclassname = "col-sm-2 col-md-2 col-form-label recpagelabel";
    }

}

@addTagHelper *, UI

@for (int i = 0; i <= Model.inputs.Count() - 1; i++)
{
    <div class="row my-2" style="@Model.inputs[i].CssDisplay">

        <label class="@(_labelclassname)">

            @if (Model.inputs[i].TypeName != "boolean")
            {
                @Model.inputs[i].x28Name
            }
        </label>

        <div class="col-sm-10 col-md-9">

            @switch (Model.inputs[i].TypeName)
            {
                @case "integer":
                <mynumber decimal-digits="0" asp-for="@Model.inputs[i].NumInput" elementid-prefix="@Model.elementidprefix"></mynumber>
                break;

            @case "decimal":
            <mynumber decimal-digits="2" asp-for="@Model.inputs[i].NumInput" elementid-prefix="@Model.elementidprefix"></mynumber>
            break;

        @case "date":
        <mydate asp-for="@Model.inputs[i].DateInput" elementid-prefix="@Model.elementidprefix"></mydate>
        break;

        @case "datetime":
        <mydate asp-for="@Model.inputs[i].DateInput" include-time="true" elementid-prefix="@Model.elementidprefix"></mydate>
        break;

        @case "boolean":
        <input type="checkbox" asp-for="@Model.inputs[i].CheckInput" />
        <label for="ff1_inputs_@(i)__CheckInput">@Model.inputs[i].x28Name</label>
        break;

        @default:
        @if (Model.inputs[i].x28IsFixedDataSource)
        {
            <select class="form-select" asp-for="@Model.inputs[i].StringInput">
                @foreach(var xx in BO.BAS.ConvertString2List(Model.inputs[i].x28DataSource, ";"))
                {
                    <option value="@(xx)">@(xx)</option>
                }
                
            </select>
        }
        else
        {
            <input type="text" class="form-control" asp-for="@Model.inputs[i].StringInput" />
            @if (Model.inputs[i].x28DataSource != null)
            {
                <script type="text/javascript">
                _autocomplete_setup("ff1_inputs_@(i)__StringInput","@(Model.inputs[i].x28DataSource)",";")

                </script>
            }
        }

        break;
}

        </div>

    </div>
    <input type="hidden" asp-for="@Model.inputs[i].IsVisible" value="@Model.inputs[i].IsVisible" />
    <input type="hidden" asp-for="@Model.inputs[i].x28DataSource" />
    <input type="hidden" asp-for="@Model.inputs[i].x28IsFixedDataSource" />
    <input type="hidden" asp-for="@Model.inputs[i].x28IsRequired" />
    <input type="hidden" asp-for="@Model.inputs[i].x28Field" />
    <input type="hidden" asp-for="@Model.inputs[i].x28Name" />
    <input type="hidden" asp-for="@Model.inputs[i].TypeName" />
    <input type="hidden" asp-for="@Model.inputs[i].x29ID" />
    <input type="hidden" asp-for="@Model.inputs[i].x24ID" />
}


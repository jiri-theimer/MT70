@model UI.Models.p31view.calendarViewModel
@inject BL.Factory _f

@{
    string _strMesic = Model.d1.Month.ToString() + "/" + Model.d1.Year.ToString();

    string strClass = null;
    string strTitle = null;
    bool bolWeekendDay = false;
    bool bolHoliday = false;
    bool bolOK = false;
    string strStyle = null;
    int x = 1;
    string strTitleVykazatDo = _f.tra("Vykázat do");
    string strTitleSouceHodiny = _f.tra("Součet hodin");
    string strCisloDne = null;
    string strDatum = null;
    bool bolOutMonth = false;
    DateTime datFirstDayOfMonth = new DateTime(Model.d0.Year, Model.d0.Month, 1);
    DateTime datLastDayOfMonth = datFirstDayOfMonth.AddMonths(1).AddDays(-1);
    string strHodiny = null;
    var qryP31 = Model.lisP31;

}



<table border="0" id="mt_scheduler_calendar">
    @{
        strStyle = "14%";
        if (!Model.ShowWeekend) strStyle = "20%";
    }
    <tr>
        <th style="@(strStyle)">Po</th>
        <th style="@(strStyle)">Út</th>
        <th style="@(strStyle)">St</th>
        <th style="@(strStyle)">Čt</th>
        <th style="@(strStyle)">Pá</th>
        @if (Model.ShowWeekend)
        {
            <th>So</th>
            <th>Ne</th>
        }
    </tr>

    @Html.Raw("<tr>")

    @for (DateTime d = Model.d1; d <= Model.d2; d = d.AddDays(1))
    {
        strClass = "mt_scheduler-day-out-month"; bolWeekendDay = false; bolOutMonth = true; bolHoliday = false;

        if (d.Month == Model.m0 && d.Year == Model.y0)
        {
            strClass = "mt_scheduler-day-in-month";
            bolOutMonth = false;
        }
        if (d.DayOfWeek == DayOfWeek.Saturday || d.DayOfWeek == DayOfWeek.Sunday)
        {
            bolWeekendDay = true;
            strClass = "mt_scheduler-day-weekend";
            //if (d.Month == Model.m0 && d.Year == Model.y0)
            //{

            //}

        }
        if (Model.lisC26.Any(p => p.c26Date == d))
        {
            bolHoliday = true;
            strClass = "mt_scheduler-day-holiday";
        }
        if (d == DateTime.Today)
        {
            strClass = "mt_scheduler-today";
        }
        strClass += " dc";
        bolOK = true;
        if (bolWeekendDay && !Model.ShowWeekend)
        {
            bolOK = false;
        }
        if (bolOK)
        {
            @Html.Raw($"<td class='{strClass}'>");

            strStyle = null;
            strDatum = BO.BAS.ObjectDate2String(d, "dd.MM.yyyy");
            if (d.DayOfWeek == DayOfWeek.Monday)
            {
                strCisloDne = BO.BAS.ObjectDate2String(d, "dd.MMM");
            }
            else
            {
                strCisloDne = BO.BAS.ObjectDate2String(d, "dd");
            }
            strClass = "mt_scheduler-day-link";
            if (bolOutMonth)
            {
                strClass += " out-month";
            }
            if (d == datFirstDayOfMonth || d == datLastDayOfMonth)
            {
                @Html.Raw("<div class='mt_scheduler-day-header' style='background-color:khaki;'>");
            }
            else
            {
                @Html.Raw("<div class='mt_scheduler-day-header'>");
            }

            if (d == DateTime.Today)
            {
                strCisloDne += "<span class='k-icon k-i-star' style='color:orange;'></span>";
            }

            @Html.Raw($"<a class='{strClass}' href='javascript:p31c(\"{strDatum}\")' title='{strTitleVykazatDo}: {strDatum}'>{strCisloDne}</a>");

            if (bolHoliday)
            {
                @Html.Raw($"<span title='{Model.lisC26.First(p => p.c26Date == d).c26Name}'>🍷{BO.BAS.OM2(Model.lisC26.First(p => p.c26Date == d).c26Name, 15)}</span>")
            }

            @Html.Raw("</div>");

            @Html.Raw("<div class='mt_scheduler-day'>");
            var qry = Model.lisSums.Where(p => p.p31Date == d);
            if (qry.Count() > 0)
            {
                strStyle = "color:blue;";
                if (qry.First().Hours_Billable > 0 && qry.First().Hours_NonBillable == 0)
                {
                    strStyle = "color:green;";
                }
                else
                {
                    if (qry.First().Hours_NonBillable > 0)
                    {
                        strStyle = "color:red;";
                    }
                }
                strStyle += ";margin-left:3px;";
                strHodiny = BO.basTime.FormatNumeric(qry.First().Hours, Model.ShowHHMM);

                @Html.Raw($"<a title='{strTitleSouceHodiny}' onclick='re(this,{Model.j02ID},\"{strDatum}\")'  class='mt_scheduler_valuelink' style='{strStyle}' p31date='{strDatum}' j02id='{Model.j02ID}'>{strHodiny}</a>");

                if (Model.ShowP31Recs)
                {
                    if (Model.ShowP31RecsNoTime)
                    {
                        qryP31 = Model.lisP31.Where(p => p.p31Date == d);
                    }
                    else
                    {
                        qryP31 = Model.lisP31.Where(p => p.p31Date == d && p.p33ID == BO.p33IdENUM.Cas);    //v rozpisu zobrazovat pouze časové úkony
                    }

                    foreach (var recP31 in qryP31)
                    {
                        strClass = "p31_rec_link";
                        strTitle = recP31.p32Name + ": " + BO.BAS.OM2(recP31.p31Text, 20);
                        @Html.Raw("<div style='white-space: nowrap;'>");

                        switch (recP31.p33ID)
                        {
                            case BO.p33IdENUM.Kusovnik:
                                strHodiny = recP31.p31Value_Orig.ToString();
                                strClass += " kusovnik";
                                break;
                            case BO.p33IdENUM.Cas:
                                if (recP31.p33ID == BO.p33IdENUM.Cas)
                                {
                                    if (Model.ShowHHMM)
                                    {
                                        strHodiny = recP31.p31HHMM_Orig;
                                    }
                                    else
                                    {
                                        strHodiny = BO.BAS.Num2StringNull(recP31.p31Hours_Orig);
                                    }
                                }
                                break;

                            default:
                                strHodiny = recP31.j27Code_Billing_Orig;
                                if (recP31.p34IncomeStatementFlag == BO.p34IncomeStatementFlagENUM.Prijem)
                                {
                                    strClass += " vydaj";
                                }
                                else
                                {
                                    strClass += " odmena";
                                }
                                break;
                        }
                        @Html.Raw($"<a class='cm' onclick='reccm(event,{recP31.pid})'>&#9776;</a>");

                        @Html.Raw($"<a class='{strClass}' title='{strTitle}' onclick='p31_rec({recP31.pid})'>");

                        strHodiny = "<span class='bunka_hodiny'>" + strHodiny + "</span>";

                        @Html.Raw(strHodiny + TheGridRowSymbol.p31_symbol(recP31));
                        @Html.Raw(BO.BAS.OM2(recP31.p41Name, 15))
                        if (recP31.p28ID_Client > 0)
                        {
                            @Html.Raw(" (" + BO.BAS.OM2(recP31.ClientName, 10) + ")")
                        }
                        @Html.Raw("</a>");
                        @Html.Raw("</div>");
                    }
                }
            }

            @Html.Raw("</div>");

            @Html.Raw("</td>");

        }
        if (x == 7)
        {
            x = 0;
            @Html.Raw("</tr>");
            @Html.Raw("<tr>");

        }
        x += 1;
    }

</table>